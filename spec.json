{
    "apiVersion": "0.1",
    "apis": [
        {
            "description": null,
            "notes": null,
            "operations": [
                {
                    "method": "post",
                    "nickname": "create",
                    "notes": "Creates a new TODO item",
                    "parameters": [
                        {
                            "allowMultiple": false,
                            "dataType": "TodoItem",
                            "description": "A TODO item",
                            "name": "body",
                            "paramType": "body",
                            "required": true
                        }
                    ],
                    "responseClass": "TodoItem",
                    "responseMessages": [
                        {
                            "code": 201,
                            "message": "Created. The URL of the created blueprint should be in the Location header"
                        },
                        {
                            "code": 405,
                            "message": "Invalid input"
                        }
                    ],
                    "summary": null
                }
            ],
            "path": "/todos"
        },
        {
            "description": "My TODO API",
            "notes": null,
            "operations": [
                {
                    "method": "delete",
                    "nickname": "nickname",
                    "notes": "delete a todo item by ID",
                    "parameters": [
                        {
                            "dataType": "string",
                            "name": "todo_id",
                            "paramType": "path"
                        }
                    ],
                    "summary": null
                },
                {
                    "method": "get",
                    "nickname": "get",
                    "notes": "get a todo item by ID<br/><br/>This will be added to the <strong>Implementation Notes</strong>.<br/>It lets you put very long text in your api.<br/><br/>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod<br/>tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim<br/>veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea<br/>commodo consequat. Duis aute irure dolor in reprehenderit in voluptate<br/>velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat<br/>cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id<br/>est laborum.",
                    "parameters": [
                        {
                            "dataType": "string",
                            "name": "todo_id",
                            "paramType": "path"
                        },
                        {
                            "allowMultiple": false,
                            "dataType": "string",
                            "description": "The ID of the TODO item",
                            "name": "todo_id_x",
                            "paramType": "path",
                            "required": true
                        },
                        {
                            "allowMultiple": false,
                            "dataType": "boolean",
                            "description": "The ID of the TODO item",
                            "name": "a_bool",
                            "paramType": "path",
                            "required": true
                        }
                    ],
                    "summary": "Get a todo task"
                },
                {
                    "method": "put",
                    "nickname": "nickname",
                    "notes": "edit a todo item by ID",
                    "parameters": [
                        {
                            "dataType": "string",
                            "name": "todo_id",
                            "paramType": "path"
                        }
                    ],
                    "summary": null
                }
            ],
            "path": "/todos/{todo_id}"
        },
        {
            "description": null,
            "notes": null,
            "operations": [
                {
                    "method": "get",
                    "nickname": "get",
                    "notes": "get something",
                    "parameters": [
                    ],
                    "responseClass": "TodoItemWithResourceFields",
                    "summary": null
                }
            ],
            "path": "/marshal_with"
        }
    ],
    "basePath": "http://localhost:5000",
    "description": "A Basic API",
    "models": {
        "ModelWithResourceFields": {
            "description": null,
            "id": "ModelWithResourceFields",
            "notes": null,
            "properties": {
                "a_string": {
                    "type": "string"
                }
            }
        },
        "TodoItem": {
            "description": "This is an example of a model class that has parameters in its constructor",
            "id": "TodoItem",
            "notes": "and the fields in the swagger spec are derived from the parameters<br/>to __init__.<br/>In this case we would have args, arg2 as required parameters and arg3 as<br/>optional parameter.",
            "properties": {
                "arg1": {
                    "type": "string"
                },
                "arg2": {
                    "type": "string"
                },
                "arg3": {
                    "default": "123",
                    "type": "string"
                }
            },
            "required": [
                "arg1",
                "arg2"
            ]
        },
        "TodoItemWithResourceFields": {
            "description": "This is an example of how Output Fields work",
            "id": "TodoItemWithResourceFields",
            "notes": "(http://flask-restful.readthedocs.org/en/latest/fields.html).<br/>Output Fields lets you add resource_fields to your model in which you specify<br/>the output of the model when it gets sent as an HTTP response.<br/>flask-restful-swagger takes advantage of this to specify the fields in<br/>the model",
            "properties": {
                "a_bool": {
                    "type": "boolean"
                },
                "a_datetime": {
                    "type": "date-time"
                },
                "a_fixed_point_decimal": {
                    "type": "number"
                },
                "a_float": {
                    "type": "number"
                },
                "a_formatted_string": {
                    "type": "string"
                },
                "a_list_of_nested_types": {
                    "items": {
                        "$ref": "ModelWithResourceFields"
                    },
                    "type": "array"
                },
                "a_list_of_strings": {
                    "items": {
                        "$ref": "string"
                    },
                    "type": "array"
                },
                "a_nested_attribute": {
                    "type": "ModelWithResourceFields"
                },
                "a_string": {
                    "type": "string"
                },
                "a_url": {
                    "type": "string"
                },
                "an_enum": {
                    "enum": [
                        "one",
                        "two",
                        "three"
                    ],
                    "type": "string"
                },
                "an_float_with_arbitrary_precision": {
                    "type": "number"
                },
                "an_int": {
                    "type": "integer"
                }
            },
            "required": [
                "a_string"
            ]
        }
    },
    "produces": [
        "application/json",
        "text/html"
    ],
    "resourcePath": "/",
    "spec_endpoint_path": "/api/spec",
    "swaggerVersion": "1.2"
}
